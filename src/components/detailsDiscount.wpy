<style>
  .groupBuy_content {
    /*padding: 20rpx;*/
    width: 100%;
    background: #fff;
    border-top: 1rpx solid #fbfbfb;
  }
  .groupBuy_content2 {
    margin: 20rpx 0;
    width: 100%;
    background: #fff;
  }
  .groupBuy_content2 .title {
    padding: 24rpx;
  }
  .groupBuy_content .name {
    font-size: 30rpx;
    padding: 20rpx;
    padding-bottom: 0;

  }
  .groupBuy_content .description {
    color: #7b7b7b;
    font-size: 26rpx;
    padding: 0 40rpx 20rpx 20rpx;
  }
  .priceallall{
    padding:20rpx;
    padding-top: 0;
    display: flex;
  }
  .priceli{
    flex: 1;
  }
  .priceallall .fx{
    width: 75rpx;
    height: 75rpx;
    padding: 0;
    background: none;
    overflow: inherit;
    line-height: inherit;
    margin-left: 20rpx;
  }
  .priceallall .fx::after{
    border: none;
  }
  .priceallall .fx image{
    width: 100%;
    height: 100%;
  }
  .groupBuy_content .price {
    font-size: 30rpx;
    color: orangered;
    display: flex;
    align-items: baseline;
  }
  .groupBuy_content .price1{
    margin-top: 0rpx;
  }

  .groupBuy_content .price .current{
    text-align: left;
    flex: 1;
  }
  .groupBuy_content .price .current .text1 {
    font-size: 30rpx;
    color: #7b7b7b;
  }
  .groupBuy_content .price .current .text2 {
    font-size: 52rpx;
    color: #E01234;
    font-weight: bold;
  }

  .groupBuy_content .price .reduce .text1{
    font-size: 30rpx;
    color: #E01234;
  }
  .groupBuy_content .price .reduce .text2{
    font-size: 50rpx;
    color: #E01234;
    font-weight: bold;
  }
  .groupBuy_content2 .title .text1 {
    color: #7b7b7b;
    color: 36rpx;
    font-weight: 700;
  }
  .groupBuy_content2 .title .text2 {
    color: #000;
    font-size: 30rpx;
    font-weight: 700;
  }
  .text3{
    text-decoration:line-through;
    margin-left: 10rpx;
    color: #7b7b7b;

  }
  .zw{
    width: 100%;
    height: 120rpx;
  }
  .groupBuy-content3{
    background: #fff;
    padding: 0rpx 20rpx;
  }
  .groupBuy-content3-1{
    display: flex;
    height: 100%;
    align-items: center;
    height: 80rpx;
  }
  .groupBuy-content3-1-1{
    color: #000;
    font-size: 32rpx;
  }
  ._groupBuy-content3-1{
    flex: 1;
  }

  .groupBuy-content3-2-1-1 image{
    width: 100%;
    height: 100%;
    border-radius:50%;
  }
  .groupBuy-content3 .description{
    color: #7b7b7b;
    padding: 20rpx;
    background: #fafafa;
    margin-top: 20rpx;
  }
  .groupBuy-content3-1.line{
    border-bottom:1px solid #f3f3f3;
  }
  .ts-icon-gm:before{
    content: "\e609";
    font-size: 40rpx;
  }
</style>

<template>
  <banner />
  <view class="groupBuy_content">
    <view class="name">{{name}}</view>
    <view class="priceallall">
      <view class="priceli priceall">
        <view class="price price1">
          <view class="current">
            <text class='text2'>￥{{floorPrice}}</text><span class="text3">￥{{salePrice}}</span>
          </view>
        </view>
      </view>
      <button class="fx" wx:if="{{status == 1}}"><image src="../assets/img/fx.png"></image></button>
      <button class="fx" open-type="share" wx:else><image src="../assets/img/fx.png"></image></button>
    </view>
  </view>
  <view class="groupBuy_content2">
    <view class="title">
      <span class="iconfont icon-clock" style="font-weight: 700;color: #7b7b7b;"></span>
      <text class="text1"> 活动开始时间：</text><text class="text2">{{startTime}}</text>
    </view>
  </view>
  <view class="groupBuy_content2">
    <view class="title">
      <span class="iconfont icon-clock" style="font-weight: 700;color: #7b7b7b;"></span>
      <text class="text1"> 活动截止时间：</text><text class="text2">{{endTime}}</text>
    </view>
  </view>

  <view class="groupBuy-content3" style="margin-bottom: 20rpx; padding-bottom:20rpx;">
    <view class="groupBuy-content3-1 line">
      <view class="_groupBuy-content3-1 groupBuy-content3-1-1">商品详情</view>
    </view>
    <view class="description">{{description}}</view>
  </view>
  <view class="zw"></view>
  <view wx:if="{{status !== 1}}">
    <view class="fixedBtn">
      <view class="rightBtn" @tap="check()"><span class="ts-iconfont ts-icon-gm"></span> 立即购买 </view>
    </view>
  </view>
  <release :activityId.sync="activityId" :categoryId.sync="categoryId" :themeId.sync="themeId" :source.sync="source" wx:else/>
  <alert/>
  <maskAlert :statusType.sync="statusGroup" :describeStr.sync="describeStr" />
  <activeStateCheck :activityId.sync="activityId" :APIServer.sync="APIServer" :accessToken.sync="accessToken" @goBuy.user="goBuy" :describeStr.sync="describeStr"/>
</template>

<script>
  import wepy from 'wepy';
  import {formatDate} from '../common/date';
  import release from '../components/release';
  import banner from '../components/banner';
  import alert from '../components/alert';
  import maskAlert from './maskAlert';
  import activeStateCheck from '../components/activeStateCheck';
  export default class detailsDiscount extends wepy.component {
     props = {
       LoadingState: {
        type: Number,
        twoWay: true
      },
      name: {
        type: String,
        twoWay: true
      },
      images: {
          type: String,
          twoWay: true
      }
    };
    data = {
      themeId: '',
      source: '',
      id: '',
      userId: '',
      goodType: '',
      productId: '',
      categoryId: '',
      activityId: '',
      salePrice: '',
      floorPrice: '',
      status: '',
      quantity: '',
      description: '',
      filePaths: [],
      startTime: '',
      endTime: '',
      APIServer: '',
      accessToken: '',
      statusGroup: '',
      describeStr: '活动暂时冻结，稍后再试！|活动已结束！|活动未发布！|活动已结束！|暂时不能购买！'
    };
    components = {
      banner,
      release,
      alert,
      maskAlert,
      activeStateCheck
    };
    methods = {
      check(val) {
        let me = this;
        me.$invoke('activeStateCheck', 'activeStateCheckFun', val);
      },
      lookingmore(type) {
        let me = this;
        me.togglemore = type;
        if (type === '1') {
          me.getProductDetailmore();
        }
      },
      getQRCode() {
        let imgInfo = {
          img: this.proDetail.properties.filePaths[0],
          title: this.proDetail.name,
          des: this.proDetail.description
        };
        this.$parent.$parent.globalData.saveImgInfo = imgInfo;
        this.$apply();
        wepy.navigateTo({
          url: 'QRCode'
        });
      },
      goBuy() {
        let me = this;
        let data = {
          activityId: me.activityId,
          subOrders: [{
            quantity: 1,
            marketPrice: 0,
            productId: me.productId,
            id: me.id,
            vendorId: me.userId
          }],
          type: me.type
        };
        wepy.request({
          url: `${me.$parent.$parent.APIServer}/guide/order`,
          method: 'POST',
          header: {
            'accessToken': me.$parent.$parent.globalData.accessToken
          },
          data: data,
          success(data) {
            let result = data.data;
            if (result.stat === 406) {
              me.$invoke('alert', 'alertFun', data.data.error);
            } else {
              let orders = {
                dataArr: [{
                  quantity: 1,
                  marketPrice: 0,
                  salePrice: result.data.orders[0].amount,
                  Thumbnails: me.filePaths[0],
                  name: me.name,
                  productId: me.productId,
                  id: me.id,
                  vendorId: me.userId
                }],
                activityId: me.activityId,
                categoryId: me.categoryId,
                goodType: me.goodType,
                total: result.data.total,
                type: me.type,
                orderId: result.data.orders[0].id
              };
              me.$parent.$parent.globalData.orders = orders;
              wepy.navigateTo({
                url: 'orderSure'
              });
            }
          }
        });
      }
    };
    getProductDetail(id) {
      let me = this;
      wepy.request({
        url: `${me.$parent.$parent.APIServer}/guide/activity/${id}`,
        header: {
          'accessToken': me.$parent.$parent.globalData.accessToken
        },
        success: function (data) {
          let result = data.data.data;
          me.proDetail = result;
          me.status = result.status;
          if (result) {
            me.LoadingState = 1;
            if (result.status === 1) { // 未发布
              wepy.hideShareMenu();
              me.startTime = formatDate(result.createTime, 'Y-m-d H:i');
            } else {
              me.startTime = formatDate(result.startTime, 'Y-m-d H:i');
            }
            me.quantity = result.activityProducts[0].quantity;
            me.id = result.id;
            me.userId = result.userId;
            me.productId = result.products[0].productId;
            let properties = JSON.parse(result.properties);
            me.images = properties.filePaths[0];
            me.filePaths = properties.filePaths;
            me.salePrice = result.products[0].salePrice.toFixed(2);
            me.floorPrice = result.products[0].floorPrice.toFixed(2);
            me.name = result.name;
            me.description = result.description;
            me.endTime = formatDate(result.endTime, 'Y-m-d H:i');
            me.goodType = result.products[0].type;
            me.statusGroup = {
              status: me.status,
              quantity: me.quantity
            };
            me.$apply();
          }
        }
      });
    };
    watch = {
      filePaths (newValue, oldValue) {
        this.$invoke('banner', 'filePathsFun', newValue);
      }
    };
    onLoadFun(optionsStr) {
      let options = JSON.parse(optionsStr);
      this.themeId = options.themeId;
      this.source = options.source;
      this.activityId = options.activityId;
      this.categoryId = options.categoryId;
      this.APIServer = this.$parent.$parent.APIServer;
      this.accessToken = this.$parent.$parent.globalData.accessToken;
      this.getProductDetail(this.activityId);
      this.$apply();
    }
  }
</script>
